// <auto-generated />
using System;
using Alugai.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alugai.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250226190055_AtualizandoModeloImovel")]
    partial class AtualizandoModeloImovel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Alugai.Models.Anuncio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecoFinal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioCpf")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ImovelId");

                    b.HasIndex("UsuarioCpf");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("Alugai.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoUf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Alugai.Models.Imovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnuncianteCpf")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<float>("AreaQuadrada")
                        .HasColumnType("float");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeCozinha")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeDeAndares")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeDeBanheiros")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeDeGaragem")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeDeQuartos")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeDeSala")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeDeSuites")
                        .HasColumnType("int");

                    b.Property<bool>("StatusImovel")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TipoImovel")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDoAluguel")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ValorDoCondominio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ValorDoIptu")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncianteCpf");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("Alugai.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FormaDePagamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("Alugai.Models.Usuario", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Cpf");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Alugai.Models.Anuncio", b =>
                {
                    b.HasOne("Alugai.Models.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alugai.Models.Usuario", null)
                        .WithMany("Anuncios")
                        .HasForeignKey("UsuarioCpf");

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("Alugai.Models.Imovel", b =>
                {
                    b.HasOne("Alugai.Models.Usuario", "Anunciante")
                        .WithMany("Imoveis")
                        .HasForeignKey("AnuncianteCpf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alugai.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anunciante");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Alugai.Models.Pagamento", b =>
                {
                    b.HasOne("Alugai.Models.Anuncio", "Anuncio")
                        .WithMany("Pagamentos")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncio");
                });

            modelBuilder.Entity("Alugai.Models.Anuncio", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("Alugai.Models.Usuario", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Imoveis");
                });
#pragma warning restore 612, 618
        }
    }
}
